// <auto-generated />
using System;
using Gaming.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gaming.DataAccess.Migrations
{
    [DbContext(typeof(GameDbContext))]
    [Migration("20220603120309_initialize")]
    partial class initialize
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Gaming.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyName = "Rocksteady"
                        },
                        new
                        {
                            Id = 2,
                            CompanyName = "Ubisoft"
                        },
                        new
                        {
                            Id = 3,
                            CompanyName = "Frogwares"
                        },
                        new
                        {
                            Id = 4,
                            CompanyName = "EA Sports"
                        },
                        new
                        {
                            Id = 5,
                            CompanyName = "Rare Ltd"
                        },
                        new
                        {
                            Id = 6,
                            CompanyName = "Psyonix"
                        });
                });

            modelBuilder.Entity("Gaming.Entities.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("GameCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GameName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GamePlatform")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("GamePrice")
                        .HasColumnType("float");

                    b.Property<double>("GameScore")
                        .HasColumnType("float");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 2,
                            GameCategory = "Suikastçı",
                            GameName = "Assassin's Creed II",
                            GamePlatform = "PC",
                            GamePrice = 45.0,
                            GameScore = 4.5,
                            IsActive = true
                        },
                        new
                        {
                            Id = 2,
                            CompanyId = 1,
                            GameCategory = "Süper Kahraman",
                            GameName = "Batman Arkham Knight",
                            GamePlatform = "PC",
                            GamePrice = 50.0,
                            GameScore = 4.2000000000000002,
                            IsActive = true
                        },
                        new
                        {
                            Id = 3,
                            CompanyId = 3,
                            GameCategory = "Dedektif",
                            GameName = "Sherlock Holmes: Chapter One",
                            GamePlatform = "PC",
                            GamePrice = 109.45,
                            GameScore = 4.7000000000000002,
                            IsActive = true
                        },
                        new
                        {
                            Id = 4,
                            CompanyId = 3,
                            GameCategory = "Dedektif",
                            GameName = "Sherlock Holmes: Crimes and Punishments",
                            GamePlatform = "PC",
                            GamePrice = 39.149999999999999,
                            GameScore = 3.8999999999999999,
                            IsActive = true
                        },
                        new
                        {
                            Id = 5,
                            CompanyId = 4,
                            GameCategory = "Futbol",
                            GameName = "FIFA 2022",
                            GamePlatform = "Konsol",
                            GamePrice = 800.0,
                            GameScore = 4.4000000000000004,
                            IsActive = true
                        },
                        new
                        {
                            Id = 6,
                            CompanyId = 5,
                            GameCategory = "Macera",
                            GameName = "Sea of Thieves",
                            GamePlatform = "PC",
                            GamePrice = 61.0,
                            GameScore = 4.5999999999999996,
                            IsActive = true
                        },
                        new
                        {
                            Id = 7,
                            CompanyId = 6,
                            GameCategory = "Spor",
                            GameName = "Rocket League",
                            GamePlatform = "PC",
                            GamePrice = 0.0,
                            GameScore = 4.7999999999999998,
                            IsActive = true
                        },
                        new
                        {
                            Id = 8,
                            CompanyId = 2,
                            GameCategory = "Nişancı",
                            GameName = "Far Cry 6",
                            GamePlatform = "PC",
                            GamePrice = 134.15000000000001,
                            GameScore = 4.5,
                            IsActive = true
                        });
                });

            modelBuilder.Entity("Gaming.Entities.Game", b =>
                {
                    b.HasOne("Gaming.Entities.Company", "Company")
                        .WithMany("Games")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Gaming.Entities.Company", b =>
                {
                    b.Navigation("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
